---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: eirini-loggregator-fluentd
spec:
  selector:
    matchLabels:
      name: eirini-loggregator-fluentd
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: eirini-loggregator-fluentd
    spec:
      serviceAccountName: "eirini"
      initContainers:
      - name: copy-certs
        env:
        - name: INTERNAL_CA_CERT
          valueFrom:
            secretKeyRef:
              key: internal-ca-cert
              name: "<%= p('opi.certs_secret_name') %>"
        - name: REGISTRY
          value: "<%= p('opi.registry_address') %>"
        - name: SCF_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: "<%= p('eirini.cert_copier_image') %>"
        volumeMounts:
        - name: host-docker
          mountPath: /workspace/docker
      - name: config-copier
        image: "<%= p('eirini.cert_copier_image') %>"
        command: [ "/bin/sh", "-c", "cp /input/fluent.conf /output" ]
        volumeMounts:
        - name: fluentd-conf
          mountPath: /input
        - name: config-volume
          mountPath: /output
          readOnly: false
      containers:
      - name: eirini-loggregator-fluentd
        image: <%= p('eirini.fluentd_image') %>
        imagePullPolicy: Always
        env:
        - name: FLUENT_UID
          value: "0"
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: vardata
          mountPath: /var/data
        <% if_p("eirini.fluentd.varlog_hostpath","eirini.fluentd.varlog_hostpath_mount_point") do |_, mount_point| %>
        - name: varlog
          mountPath: <%= mount_point %>
        <% end %>
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: varvcapstore
          mountPath: /var/vcap/store
          readOnly: true
        - name: varvcapdata
          mountPath: /var/vcap/data
          readOnly: true
        - name: loggregator-tls-certs
          mountPath: /fluentd/certs
          readOnly: true
        - name: config-volume
          mountPath: /fluentd/etc/
          readOnly: false
      - name: loggregator-agent
        image: loggregator/agent
        imagePullPolicy: Always
        env:
        - name: AGENT_METRIC_SOURCE_ID
          value: scf/daemonset/loggregator-fluentd
        - name: ROUTER_ADDR
          value: <%= p('eirini.doppler_address') %>
        - name: ROUTER_ADDR_WITH_AZ
          value: <%= p('eirini.doppler_address_with_az') %>
        - name: AGENT_PPROF_PORT
          value: "6062"
        - name: AGENT_HEALTH_ENDPOINT_PORT
          value: "6063"
        ports:
        - name: health
          containerPort: 6063
        volumeMounts:
        - name: loggregator-tls-certs
          mountPath: /srv/certs
          readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
      <% if_p("eirini.fluentd.varlog_hostpath") do |varlog_hostpath| %>
      - name: varlog
        hostPath:
          path: <%= varlog_hostpath %>
      <% end %>
      - name: vardata
        hostPath:
          path: /var/data
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: varvcapstore
        hostPath:
          path: /var/vcap/store/
      - name: varvcapdata
        hostPath:
          path: /var/vcap/data/
      - name: loggregator-tls-certs
        secret:
          secretName: <%= p('opi.certs_secret_name') %>
          items:
            - key: loggregator-agent-cert
              path: agent.crt
            - key: loggregator-agent-cert-key
              path: agent.key
            - key: internal-ca-cert
              path: ca.crt
      - name: config-volume
        emptyDir: {}
      - name: fluentd-conf
        configMap:
          name: fluentd-conf
          items:
          - key: fluentd-conf-contents
            path: fluent.conf
      - name: host-docker
        hostPath:
          path: /etc/docker
          type: Directory

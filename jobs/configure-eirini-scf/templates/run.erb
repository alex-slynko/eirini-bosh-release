#!/bin/bash

status() {
    local fmt="${1}"
    shift
    printf "\n%b${fmt}%b\n" "\033[0;32m" "$@" "\033[0m"
}

status "Configuring Eirini"

kubectl=/var/vcap/packages/kubectl/bin/kubectl

status "Making sure the Eirini namespace exists"
$kubectl get namespace "<%= p("opi.kube_namespace") %>" || $kubectl create namespace "<%= p("opi.kube_namespace") %>"

$kubectl create secret generic "<%= p("opi.certs_secret_name") %>" -n "<%= p("opi.kube_namespace") %>" \
  --from-literal=cc-server-crt='<%= p("opi.cc_cert") %>' \
  --from-literal=cc-server-crt-key='<%= p("opi.cc_key") %>' \
  --from-literal=cc-uploader-crt='<%= p("capi.cc_uploader.mutual_tls.server_cert") %>' \
  --from-literal=cc-uploader-crt-key='<%= p("capi.cc_uploader.mutual_tls.server_key") %>' \
  --from-literal=internal-ca-cert='<%= p("opi.cc_ca") %>'

status "Setting up fluentd configuration"
$kubectl apply -f /var/vcap/jobs/configure-eirini-scf/config/fluentd-configmap.yaml

status "Setting up Eirini daemonsets"
$kubectl apply -f /var/vcap/jobs/configure-eirini-scf/config/eirini-daemonset.yaml
